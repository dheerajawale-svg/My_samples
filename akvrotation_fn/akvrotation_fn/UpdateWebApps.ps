using namespace System.Net

# Input bindings are passed in via param block.
param($Request, $TriggerMetadata)

# Write to the Azure Functions log stream.
Write-Host "PowerShell HTTP trigger function processing a request."

$psmessage = $Request.Body
$env = $psmessage.Env
$myhash = $psmessage.Secrets
Write "Trying to read AzSubscription for given environment"
Get-AzSubscription | Where-Object {($_.Name -like $env)} | ForEach-Object {
    Select-AzSubscription -SubscriptionName $_ | Out-Null
    Get-AzWebApp | ForEach-Object {
        $appName = $_.Name
        $resourceGroupName = $_.ResourceGroup
        [string[]]$region1 = $appName -split "app-"
        $region1 = $region1 -split "-"
        #set apps value from input dictionary
        Write $appName
        if ($appName -like "*-global*") {
            foreach($key in $myhash.Keys) {
                [string[]]$region2 = $key -split "sql-"
                $region2 = $region2 -split "-"
                if( ($region1[1] -eq $region2[1]) -and ($region1[2] -eq $region2[2]) ) {
                    $connectionStrings = @{GlobalOtoscanDataContext = @{Value=$myhash[$key];type="SQLAzure"}}
                    Set-AzWebApp -ResourceGroupName $resourceGroupName -Name $appName -ConnectionStrings $connectionStrings
                }
            }
        }
        else{
            foreach($key in $myhash.Keys) {
            [string[]]$region2 = $key -split "sql-"
            $region2 = $region2 -split "-"
            if( ($region1[1] -eq $region2[1]) -and ($region1[2] -eq $region2[2]) ) {
                $connectionStrings = @{OtoscanDataContext = @{Value=$myhash[$key];type="SQLAzure"}}
                Set-AzWebApp -ResourceGroupName $resourceGroupName -Name $appName -ConnectionStrings $connectionStrings
            }
        }
      }
    }
}

Push-OutputBinding -Name Response -Value ([HttpResponseContext]@{
    Body = "Operation Completed"
})